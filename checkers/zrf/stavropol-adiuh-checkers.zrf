(define royal-shift (
   (verify friend?)
   (verify (not-in-zone? Promotion))
   $1 (while empty?
       add $1
   )
))

(define royal-jump (
   (verify friend?)
   $1 (while empty?  $1)
   (verify enemy?)
   $1 (while empty?
       mark
       (while empty? 
          (opposite $1)
       ) 
       capture
       back
       add $1
   )
))

(define royal-cont (
   $1 (while empty? 
       $1 (verify not-last-from?)
   )
   (verify enemy?)
   $1 (while empty?
       mark
       (while empty? 
          (opposite $1)
       ) 
       capture
       back
       (add-partial cont-type) $1
   )
))

(define man-shift (
   $1 (verify empty?)
   (if (in-zone? $2Promotion)
      (add $2King)
    else
      add
   )
))

(define man-jump (
   $1 (verify (or (piece? $2Man) (piece? $2King)))
   capture 
   $1 (verify empty?)
   (if (in-zone? $3Promotion)
       (add $3King)
    else
       add
   )
))

(define king-jump (
   $1 (while empty? $1)
   (verify (or (piece? $2Man) (piece? $2King)))
   $1 (while empty?
       mark
       (while empty? 
          (opposite $1)
       ) 
       capture
       back
       add $1
   )
))

(game
  (title "Stavropol Adiuh Checkers")

  (players White Black)
  (turn-order White Black)
  (move-priorities jump-type normal-type)

  (board
     (image "images/adiuh/8x8.bmp")
     (grid
         (start-rectangle 2 44 70 112)
         (dimensions
           ("a/b/c/d/e/f/g/h" (68 0)) ; files
           ("8/7/6/5/4/3/2/1" (0 68)) ; ranks
         )
         (directions (ne 1 -1) (nw -1 -1) (se 1 1) (sw -1 1))
     )
     (zone (name WhitePromotion) (players White Black)
           (positions b8 d8 f8 h8)
     )
     (zone (name BlackPromotion) (players White Black)
           (positions a1 c1 e1 g1)
     )
  )

  (piece
     (name WhiteMan)
     (image White "images/adiuh/wman.bmp")
     (moves
         (move-type jump-type)
         (man-jump nw Black White) (man-jump ne Black White) (man-jump sw Black White) (man-jump se Black White)
         (move-type normal-type)
         (man-shift nw White) (man-shift ne White)
     )
  )
  (piece
     (name BlackMan)
     (image Black "images/adiuh/bman.bmp")
     (moves
         (move-type jump-type)
         (man-jump nw White Black) (man-jump ne White Black) (man-jump sw White Black) (man-jump se White Black)
         (move-type normal-type)
         (man-shift sw Black) (man-shift se Black)
     )
  )
  (piece
     (name WhiteKing)
     (image White "images/adiuh/wking.bmp")
     (moves
         (move-type jump-type)
         (king-jump nw Black) (king-jump ne Black) (king-jump sw Black) (king-jump se Black)
     )
  )
  (piece
     (name BlackKing)
     (image Black "images/adiuh/bking.bmp")
     (moves
         (move-type jump-type)
         (king-jump nw White) (king-jump ne White) (king-jump sw White) (king-jump se White)
     )
  )

  (board-setup
    (White (WhiteMan a1 c1 e1 g1  b2 d2 f2 h2  a3 c3 e3 g3) )
    (Black (BlackMan b8 d8 f8 h8  a7 c7 e7 g7  b6 d6 f6 h6) )
  )
)

(variant
  (title "King Adiuh Checkers (10x10)")
  (default)

  (board
     (image "images/adiuh/10x10.bmp")
     (grid
         (start-rectangle 2 44 70 112)
         (dimensions
           ("a/b/c/d/e/f/g/h/i/j" (68 0)) ; files
           ("10/9/8/7/6/5/4/3/2/1" (0 68)) ; ranks
         )
         (directions (ne 1 -1) (nw -1 -1) (se 1 1) (sw -1 1))
     )
     (symmetry Black (nw se) (se nw) (ne sw) (sw ne))
     (zone (name promotion) (players White)
           (positions b10 d10 f10 h10 j10)
     )
     (zone (name promotion) (players Black)
           (positions a1 c1 e1 g1 i1)
     )
  )

  (piece
     (name WhiteMan)
     (image White "images/adiuh/wman.bmp")
     (moves
         (move-type jump-type)
         (man-jump nw Black White) (man-jump ne Black White) (man-jump sw Black White) (man-jump se Black White)
         (move-type normal-type)
         (man-shift nw White) (man-shift ne White)
     )
  )
  (piece
     (name BlackMan)
     (image Black "images/adiuh/bman.bmp")
     (moves
         (move-type jump-type)
         (man-jump nw White Black) (man-jump ne White Black) (man-jump sw White Black) (man-jump se White Black)
         (move-type normal-type)
         (man-shift sw Black) (man-shift se Black)
     )
  )
  (piece
     (name WhiteKing)
     (image White "images/adiuh/wking.bmp")
     (moves
         (move-type jump-type)
         (king-jump nw Black) (king-jump ne Black) (king-jump sw Black) (king-jump se Black)
     )
  )
  (piece
     (name BlackKing)
     (image Black "images/adiuh/bking.bmp")
     (moves
         (move-type jump-type)
         (king-jump nw White) (king-jump ne White) (king-jump sw White) (king-jump se White)
     )
  )

  (piece
     (name Queen)
     (image White "images/adiuh/red.bmp"
            Black "images/adiuh/blue.bmp")
     (moves
         (move-type normal-type)
         (royal-shift nw) (royal-shift ne) (royal-shift sw) (royal-shift se)
         (move-type jump-type)
         (royal-jump nw) (royal-jump ne) (royal-jump sw) (royal-jump se)
     )
  )

  (board-setup
    (White (WhiteMan a1 c1 g1 i1  b2 d2 f2 h2 j2  a3 c3 e3 g3 i3  b4 d4 f4 h4 j4) (Queen e1))
    (Black (BlackMan b10 d10 h10 j10  a9 c9 e9 g9 i9  b8 d8 f8 h8 j8  a7 c7 e7 g7 i7) (Queen f10))
  )
)
